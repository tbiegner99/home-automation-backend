version: '3.3'
secrets:
    ha_db_user:
        file: ./secrets/ha_db_user.txt
    ha_db_password:
        file: ./secrets/ha_db_password.txt
    ha_db_root_password:
        file: ./secrets/ha_db_root_password.txt
services:
    home-automation-db:
        image: mysql:8.0.28
        restart: always
        container_name: home-automation-db
        environment:
            MYSQL_ROOT_PASSWORD_FILE: '/run/secrets/ha_db_root_password'
            MYSQL_PASSWORD_FILE: '/run/secrets/ha_db_password'
            MYSQL_USER_FILE: '/run/secrets/ha_db_user'
            COMPOSE_CONVERT_WINDOWS_PATHS: 1
        ports:
            - '3308:3306'
        volumes:
            - ./db/data:/var/lib/mysql
            - ./db/scripts:/docker-entrypoint-initdb.d
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            timeout: 20s
            retries: 10
        secrets:
            - ha_db_root_password
            - ha_db_user
            - ha_db_password

    readings-backend:
        build:
            context: ./
            dockerfile: ./dockerfile
            args:
                - SERVICE=readings
        restart: always
        ports:
            - 8080
        environment:
            DB_HOST: 'home-automation-db'
            DB_PORT: '3306'
            DB_PASSWORD_FILE: '/run/secrets/ha_db_password'
            DB_USER_FILE: '/run/secrets/ha_db_user'
        container_name: readings
        secrets:
            - ha_db_user
            - ha_db_password
        depends_on:
            home-automation-db:
                condition: service_healthy
    todo-backend:
        build:
            context: ./
            dockerfile: ./dockerfile
            args:
                - SERVICE=todo
        restart: always
        ports:
            - 8080
        environment:
            DB_HOST: 'home-automation-db'
            DB_PORT: '3306'
            DB_PASSWORD_FILE: '/run/secrets/ha_db_password'
            DB_USER_FILE: '/run/secrets/ha_db_user'
        container_name: todo
        secrets:
            - ha_db_user
            - ha_db_password
        depends_on:
            home-automation-db:
                condition: service_healthy
    tv-backend:
        build:
            context: ./
            dockerfile: ./dockerfile
            args:
                - SERVICE=tv
        restart: always
        ports:
            - 8080
        environment:
            DB_HOST: 'home-automation-db'
            DB_PORT: '3306'
            DB_PASSWORD_FILE: '/run/secrets/ha_db_password'
            DB_USER_FILE: '/run/secrets/ha_db_user'
        container_name: tv
        secrets:
            - ha_db_user
            - ha_db_password
        depends_on:
            home-automation-db:
                condition: service_healthy
    kareoke-backend:
        build:
            context: ./
            dockerfile: ./dockerfile
            args:
                - SERVICE=kareoke
        restart: always
        ports:
            - 8080
        volumes:
            - ./services/kareoke/src:/srv/package/services/kareoke/src
            - ./services/kareoke/package.json:/srv/package/services/kareoke/package.json
            - ./playlistFile:/mnt/kareoke/playlist
        environment:
            DB_HOST: 'home-automation-db'
            DB_PORT: '3306'
            DB_PASSWORD_FILE: '/run/secrets/ha_db_password'
            DB_USER_FILE: '/run/secrets/ha_db_user'
            PLAYLIST_FILE_LOCATION: '/mnt/kareoke/playlist'
        container_name: kareoke
        secrets:
            - ha_db_user
            - ha_db_password
        depends_on:
            home-automation-db:
                condition: service_healthy
        command: npm run debug
    kareoke-playlist-share:
        image: dperson/samba
        volumes:
            - ./samba:/etc/samba
            - ./playlistFile:/usr/local/share
        restart: always
        container_name: kareoke-playlist
        ports:
            - 139:139
            - 446:445
    router:
        image: nginx
        restart: always
        container_name: router
        volumes:
            - ./router/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
